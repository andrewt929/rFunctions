for (i in id){
##Read a file
readMonitor = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract the data for the specified pollutant
data <- c(data, readMonitor[[pollutant]])
##Garbage collection
gc()
}
return(mean(data, na.rm = TRUE))
}
## Same function as above, but uses the lapply method
pollutantmean2 <- function(directory, pollutant, id){
## Create a list of the values of the selected pollutant
data <- lapply(id, function(i) read.csv(paste(directory, "/", formatC(i, width = 3,
flag = "0"), ".csv", sep = ""))[[pollutant]])
## Calculate and return the mean of the list
return(mean(unlist(data), na.rm = TRUE))
}
print(pollutantmean(directory, pollutant, id))
print(pollutantmean2(directory, pollutant, id))
## This is a function which uses a For Loop to read a directory of files and counts the
## number of completely observed cases in each file. It returns a dataframe with 2
## columns where the first is the name of the file and the second is the # of cases.
completeCase <- function(directory, id){
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
completeCase <- c(completeCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, completeCase))
}
## Same function as above using sapply
completeCase2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
completeCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, completeCase))
}
print(completeCase(directory, id))
print(completeCase2(directory, id))
completeCase <- function(directory, id){
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
completeCase <- c(completeCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, completeCase))
}
print(completeCase(directory, id))
completeCase <- function(directory, id){
complteCase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
completeCase <- c(completeCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, completeCase))
}
print(completeCase(directory, id))
completeCase <- function(directory, id){
ncase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
ncase <- c(completeCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, ncase))
}
print(completeCase(directory, id))
completeCase <- function(directory, id){
ncase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
ncase <- c(ncase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, ncase))
}
print(completeCase(directory, id))
source('C:/Users/andre/Dropbox/Programming/Coursera/RFunctionExamples/AirData/pollutantMean.R')
source('C:/Users/andre/Dropbox/Programming/Coursera/RFunctionExamples/AirData/pollutantMean.R')
completeCase <- function(directory, id){
nCase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
ncase <- c(nCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(completeCase(directory, id))
completeCase <- function(directory, id){
nCase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
nCase <- c(nCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(completeCase(directory, id))
## Same function as above using sapply
completeCase2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
completeCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(completeCase2(directory, id))
## Same function as above using sapply
completeCase2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
nCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(completeCase2(directory, id))
source('C:/Users/andre/Dropbox/Programming/Coursera/RFunctionExamples/AirData/pollutantMean.R')
complete(directory)
complete
source('C:/Users/andre/Dropbox/Programming/Coursera/RFunctionExamples/AirData/pollutantMean.R')
directory <- "specdata"
pollutant <- "nitrate"
id = 1:332
threshold = 0
## This is a function which uses a For Loop to calculate the mean value of a specified
## air polutant from a specified directory string with multiple csv files of data.
data = numeric()
pollutantmean <- function(directory, pollutant, id) {
for (i in id){
##Read a file
readMonitor = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract the data for the specified pollutant
data <- c(data, readMonitor[[pollutant]])
##Garbage collection
gc()
}
return(mean(data, na.rm = TRUE))
}
## Same function as above, but uses the lapply method
pollutantmean2 <- function(directory, pollutant, id){
## Create a list of the values of the selected pollutant
data <- lapply(id, function(i) read.csv(paste(directory, "/", formatC(i, width = 3,
flag = "0"), ".csv", sep = ""))[[pollutant]])
## Calculate and return the mean of the list
return(mean(unlist(data), na.rm = TRUE))
}
print(pollutantmean(directory, pollutant, id))
print(pollutantmean2(directory, pollutant, id))
## This is a function which uses a For Loop to read a directory of files and counts the
## number of completely observed cases in each file. It returns a dataframe with 2
## columns where the first is the name of the file and the second is the # of cases.
complete <- function(directory, id){
nCase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
nCase <- c(nCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
## Same function as above using sapply
complete2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
nCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(complete(directory, id))
print(complete2(directory, id))
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nCase"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor)]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr <- corr(directory,150)
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nCase"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor),]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr <- corr(directory, 150)
summary(cr)
directory <- "specdata"
pollutant <- "nitrate"
id = 1:332
threshold = 0
## This is a function which uses a For Loop to calculate the mean value of a specified
## air polutant from a specified directory string with multiple csv files of data.
data = numeric()
pollutantmean <- function(directory, pollutant, id) {
for (i in id){
##Read a file
readMonitor = read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract the data for the specified pollutant
data <- c(data, readMonitor[[pollutant]])
##Garbage collection
gc()
}
return(mean(data, na.rm = TRUE))
}
## Same function as above, but uses the lapply method
pollutantmean2 <- function(directory, pollutant, id){
## Create a list of the values of the selected pollutant
data <- lapply(id, function(i) read.csv(paste(directory, "/", formatC(i, width = 3,
flag = "0"), ".csv", sep = ""))[[pollutant]])
## Calculate and return the mean of the list
return(mean(unlist(data), na.rm = TRUE))
}
print(pollutantmean(directory, pollutant, id))
print(pollutantmean2(directory, pollutant, id))
## This is a function which uses a For Loop to read a directory of files and counts the
## number of completely observed cases in each file. It returns a dataframe with 2
## columns where the first is the name of the file and the second is the # of cases.
complete <- function(directory, id){
nCase = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
nCase <- c(nCase, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
## Same function as above using sapply
complete2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
nCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
case <- (complete(directory, id))
print(complete2(directory, id))
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nCase"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor),]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr <- corr(directory, 300)
summary(case)
cr <- corr(directory, 336)
cr <- corr(directory, 300)
summary(cr)
directory <- "specdata"
pollutant <- "sulfate"
id = 1:10
threshold = 0
## Same function as above, but uses the lapply method
pollutantmean2 <- function(directory, pollutant, id){
## Create a list of the values of the selected pollutant
data <- lapply(id, function(i) read.csv(paste(directory, "/", formatC(i, width = 3,
flag = "0"), ".csv", sep = ""))[[pollutant]])
## Calculate and return the mean of the list
return(mean(unlist(data), na.rm = TRUE))
}
print(pollutantmean2(directory, pollutant, id))
directory <- "specdata"
pollutant <- "nitrate"
id = 70:72
threshold = 0
print(pollutantmean2(directory, pollutant, id))
directory <- "specdata"
pollutant <- "sulfate"
id = 34
threshold = 0
print(pollutantmean2(directory, pollutant, id))
directory <- "specdata"
pollutant <- "sulfate"
id = 1:332
threshold = 0
directory <- "specdata"
pollutant <- "nitrate"
id = 1:332
threshold = 0
print(pollutantmean2(directory, pollutant, id))
id = c(6,10,20,34,100,200,300)
complete2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
nCase <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nCase))
}
print(complete2(directory, id))
print(cc$nCase)
id = 54
print(complete2(directory, id))
complete <- function(directory, id){
nobs = numeric()
for (i in id){
## Sum the completed cases by file
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
nobs <- c(nobs, sum(complete.cases(readMonitor)))
}
## Return the completed cases as a dataframe
return(data.frame(id, nobs))
}
complete2 <- function(directory, id){
## Write a function which sums the complete cases in each document
caseFinder <- function(i){
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
sum(complete.cases(readMonitor))
}
## Apply the function over the directory
nobs <- sapply(id, caseFinder)
## Return the completed cases as a dataframe
return(data.frame(id, nobs))
}
case <- (complete(directory, id))
print(complete2(directory, id))
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nCase"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor),]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr <- corr("specdata")
cr <- corr("specdata",0)
cr <- corr(directory,0)
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nobs"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor),]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
## This is a function which returns a numeric vector containing the correlations
## between sulfate and nitrate for files in a given directory which exceed a given
## threshold of complete cases.
corr <- function(directory, threshold=0){
## Find the # of completed records per file (call "complete" function)
nComplete <- complete(directory, id)
## Find the completed records above the threshold
records <- nComplete[nComplete["nobs"] > threshold,]$id
corelations = numeric()
for (i in records){
##Open record
readMonitor <- read.csv(paste(directory, "/", formatC(i, width = 3, flag = "0"),
".csv", sep = ""))
##Extract data
data <- readMonitor[complete.cases(readMonitor),]
##Find & aggregate correlations
corelations <- c(corelations, cor(data$sulfate, data$nitrate))
}
return(corelations)
}
cr<-corr("specdata",150)
directory <- "specdata"
pollutant <- "nitrate"
id = 3:332
threshold = 0
cr<-corr("specdata",150)
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
source('C:/Users/andre/Dropbox/Programming/Coursera/RFunctionExamples/AirData/pollutantMean.R')
